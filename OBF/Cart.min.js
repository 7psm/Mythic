document.addEventListener("DOMContentLoaded",()=>{console.log("=== INITIALISATION PAGE PANIER ===");const t=document.querySelector(".cart-items-list"),e=document.querySelector(".summary-subtotal"),o=document.querySelector(".summary-total-value"),n=document.querySelector(".empty-cart-message"),a=document.querySelector(".cart-summary-section"),s=document.querySelector(".cart-count");function i(){try{const t=localStorage.getItem("cart");console.log("Données brutes du panier:",t);const e=JSON.parse(t||"[]");return console.log("Panier parsé:",e),e}catch(t){return console.error("Erreur lors de la lecture du panier depuis localStorage",t),[]}}function r(t){try{localStorage.setItem("cart",JSON.stringify(t)),console.log("Panier sauvegardé:",t)}catch(t){console.error("Erreur lors de l'écriture du panier dans localStorage",t)}}function l(){const t=i().reduce((t,e)=>t+(e.quantity||0),0);s&&(t>0?(s.textContent=t,s.style.display="flex"):(s.textContent="0",s.style.display="flex"))}function c(){let n=0;if(!e||!o)return void console.error("Éléments de totaux non trouvés");t.querySelectorAll(".cart-item").forEach(t=>{const e=t.querySelector(".quantity-display"),o=t.querySelector(".item-total");if(e&&o){const a=(parseInt(e.textContent)||0)*(parseFloat(t.dataset.price)||0);o.textContent=`€${a.toFixed(2)}`,n+=a}}),e.textContent=`€${n.toFixed(2)}`,o.textContent=`€${(n+0).toFixed(2)}`,console.log("Totaux mis à jour - Sous-total:",n,"Total:",n+0)}function u(){const t=i();console.log("Vérification panier vide - Nombre d'articles:",t.length),a&&(a.style.display="block",console.log("Box récapitulatif affichée")),n?0===t.length?(n.style.display="block",console.log("Message panier vide affiché")):(n.style.display="none",console.log("Message panier vide masqué")):console.error("Élément .empty-cart-message non trouvé dans le DOM")}function d(){if(console.log("=== CHARGEMENT DU PANIER ==="),!t)return void console.error("Liste des articles du panier non trouvée (.cart-items-list)");const e=i();if(t.innerHTML="",0===e.length)return console.log("Panier vide, affichage du message"),u(),c(),void l();console.log(`Chargement de ${e.length} articles`),e.forEach((e,o)=>{if(e.id&&e.name&&void 0!==e.price&&e.quantity){const n=function(t){console.log("Création de l'élément pour:",t);const e=document.createElement("li");return e.className="cart-item",e.dataset.id=t.id,e.dataset.price=t.price,e.innerHTML=`\n      <img class="item-image" src="${t.image||"/public/50euro.png"}" alt="${t.name}" />\n      <div class="item-details">\n        <div class="item-name">${t.name}</div>\n        <div class="item-price">€${t.price.toFixed(2)}</div>\n        <div class="quantity-control">\n          <span class="quantity-label">Quantité :</span>\n          <div class="quantity-buttons">\n            <button class="quantity-button quantity-decrease" ${t.quantity<=1?"disabled":""}>-</button>\n            <span class="quantity-display">${t.quantity}</span>\n            <button class="quantity-button quantity-increase">+</button>\n          </div>\n        </div>\n      </div>\n      <div class="item-actions">\n        <div class="item-total">€${(t.price*t.quantity).toFixed(2)}</div>\n        <button class="remove-button">Supprimer</button>\n      </div>\n    `,e}(e);t.appendChild(n),console.log(`Article ${o+1} ajouté:`,e.name)}else console.warn(`Article ${o+1} incomplet ignoré:`,e)}),c(),u(),l(),console.log("=== FIN CHARGEMENT PANIER ===")}console.log("Éléments DOM trouvés:"),console.log("- cartItemsList:",t),console.log("- subtotalEl:",e),console.log("- totalEl:",o),console.log("- emptyCartMessage:",n),console.log("- cartSummarySection:",a),t&&t.addEventListener("click",e=>{const o=e.target;if(o.classList.contains("quantity-button")){const e=o.classList.contains("quantity-increase")||"+"===o.textContent.trim(),n=o.closest(".cart-item"),a=n.querySelector(".quantity-display"),s=n.querySelector(".quantity-decrease");if(!a)return;let i=parseInt(a.textContent)||1;if(!e&&i<=1)return;i=e?i+1:i-1,a.textContent=i,s&&(s.disabled=i<=1),c(),function(){const e=[];t.querySelectorAll(".cart-item").forEach(t=>{const o=t.querySelector(".quantity-display"),n=t.querySelector(".item-name"),a=t.querySelector(".item-image");o&&n&&a&&e.push({id:t.dataset.id,name:n.textContent,price:parseFloat(t.dataset.price),image:a.src,quantity:parseInt(o.textContent)||1})}),r(e)}(),l()}if(o.classList.contains("remove-button")){!function(t){console.log("=== SUPPRESSION ARTICLE ===");const e=t.dataset.id;console.log("ID à supprimer:",e);let o=i();console.log("Panier avant suppression:",o.length,"articles"),o=o.filter(t=>t.id.toString()!==e.toString()),console.log("Panier après suppression:",o.length,"articles"),r(o),t.remove(),c(),u(),l(),console.log("=== FIN SUPPRESSION ===")}(o.closest(".cart-item"))}}),console.log("Initialisation de la page panier..."),d(),window.cartUtils={clearCart:function(){confirm("Êtes-vous sûr de vouloir vider le panier ?")&&(r([]),d())},loadCart:d,readCart:i}});